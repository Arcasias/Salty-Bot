import Command from "../../classes/Command";
import Guild from "../../classes/Guild";
import Salty from "../../classes/Salty";
export default new Command({
    name: "pause",
    keys: ["freeze"],
    help: [
        {
            argument: null,
            effect: "Pauses the song currently playing",
        },
    ],
    visibility: "public",
    action(msg) {
        const { playlist } = Guild.get(msg.guild.id);
        if (playlist.connection) {
            try {
                playlist.pause();
                Salty.success(msg, `paused **${playlist.playing.title}**`, {
                    react: "‚è∏",
                });
            }
            catch (err) {
                Salty.error(msg, "the song is already paused");
            }
        }
        else {
            Salty.error(msg, "there's nothing playing");
        }
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF1c2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbWFuZHMvbXVzaWMvcGF1c2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxPQUFPLE1BQU0sdUJBQXVCLENBQUM7QUFDNUMsT0FBTyxLQUFLLE1BQU0scUJBQXFCLENBQUM7QUFDeEMsT0FBTyxLQUFLLE1BQU0scUJBQXFCLENBQUM7QUFFeEMsZUFBZSxJQUFJLE9BQU8sQ0FBQztJQUN2QixJQUFJLEVBQUUsT0FBTztJQUNiLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQztJQUNoQixJQUFJLEVBQUU7UUFDRjtZQUNJLFFBQVEsRUFBRSxJQUFJO1lBQ2QsTUFBTSxFQUFFLG1DQUFtQztTQUM5QztLQUNKO0lBQ0QsVUFBVSxFQUFFLFFBQVE7SUFDcEIsTUFBTSxDQUFDLEdBQUc7UUFDTixNQUFNLEVBQUUsUUFBUSxFQUFFLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRTdDLElBQUksUUFBUSxDQUFDLFVBQVUsRUFBRTtZQUNyQixJQUFJO2dCQUNBLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztnQkFDakIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsWUFBWSxRQUFRLENBQUMsT0FBTyxDQUFDLEtBQUssSUFBSSxFQUFFO29CQUN2RCxLQUFLLEVBQUUsR0FBRztpQkFDYixDQUFDLENBQUM7YUFDTjtZQUFDLE9BQU8sR0FBRyxFQUFFO2dCQUNWLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLDRCQUE0QixDQUFDLENBQUM7YUFDbEQ7U0FDSjthQUFNO1lBQ0gsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUseUJBQXlCLENBQUMsQ0FBQztTQUMvQztJQUNMLENBQUM7Q0FDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29tbWFuZCBmcm9tIFwiLi4vLi4vY2xhc3Nlcy9Db21tYW5kXCI7XG5pbXBvcnQgR3VpbGQgZnJvbSBcIi4uLy4uL2NsYXNzZXMvR3VpbGRcIjtcbmltcG9ydCBTYWx0eSBmcm9tIFwiLi4vLi4vY2xhc3Nlcy9TYWx0eVwiO1xuXG5leHBvcnQgZGVmYXVsdCBuZXcgQ29tbWFuZCh7XG4gICAgbmFtZTogXCJwYXVzZVwiLFxuICAgIGtleXM6IFtcImZyZWV6ZVwiXSxcbiAgICBoZWxwOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGFyZ3VtZW50OiBudWxsLFxuICAgICAgICAgICAgZWZmZWN0OiBcIlBhdXNlcyB0aGUgc29uZyBjdXJyZW50bHkgcGxheWluZ1wiLFxuICAgICAgICB9LFxuICAgIF0sXG4gICAgdmlzaWJpbGl0eTogXCJwdWJsaWNcIixcbiAgICBhY3Rpb24obXNnKSB7XG4gICAgICAgIGNvbnN0IHsgcGxheWxpc3QgfSA9IEd1aWxkLmdldChtc2cuZ3VpbGQuaWQpO1xuXG4gICAgICAgIGlmIChwbGF5bGlzdC5jb25uZWN0aW9uKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHBsYXlsaXN0LnBhdXNlKCk7XG4gICAgICAgICAgICAgICAgU2FsdHkuc3VjY2Vzcyhtc2csIGBwYXVzZWQgKioke3BsYXlsaXN0LnBsYXlpbmcudGl0bGV9KipgLCB7XG4gICAgICAgICAgICAgICAgICAgIHJlYWN0OiBcIuKPuFwiLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgU2FsdHkuZXJyb3IobXNnLCBcInRoZSBzb25nIGlzIGFscmVhZHkgcGF1c2VkXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgU2FsdHkuZXJyb3IobXNnLCBcInRoZXJlJ3Mgbm90aGluZyBwbGF5aW5nXCIpO1xuICAgICAgICB9XG4gICAgfSxcbn0pO1xuIl19