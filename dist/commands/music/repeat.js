import Command from "../../classes/Command";
import Guild from "../../classes/Guild";
import Salty from "../../classes/Salty";
export default new Command({
    name: "repeat",
    keys: ["loop", "rep", "replay"],
    help: [
        {
            argument: null,
            effect: "Toggles repeat all/off for the queue",
        },
        {
            argument: "single",
            effect: "Repeats the current song",
        },
        {
            argument: "all",
            effect: "Repeat the whole queue",
        },
        {
            argument: "off",
            effect: "Disables repeat",
        },
    ],
    visibility: "public",
    action(msg, args) {
        let { playlist } = Guild.get(msg.guild.id);
        const single = () => {
            playlist.repeat = "single";
            Salty.success(msg, "I will now repeat the current song", {
                react: "üîÇ",
            });
        };
        const all = () => {
            playlist.repeat = "all";
            Salty.success(msg, "I will now repeat the whole queue", {
                react: "üîÅ",
            });
        };
        const off = () => {
            playlist.repeat = "off";
            Salty.success(msg, "repeat disabled", { react: "‚ùé" });
        };
        if (["single", "1", "one", "this"].includes(args[0])) {
            single();
        }
        else if (["all", "queue", "q"].includes(args[0])) {
            all();
        }
        else if (["off", "disable", "0"].includes(args[0])) {
            off();
        }
        else {
            if (playlist.repeat === "off") {
                all();
            }
            else {
                off();
            }
        }
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwZWF0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbW1hbmRzL211c2ljL3JlcGVhdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLE9BQU8sTUFBTSx1QkFBdUIsQ0FBQztBQUM1QyxPQUFPLEtBQUssTUFBTSxxQkFBcUIsQ0FBQztBQUN4QyxPQUFPLEtBQUssTUFBTSxxQkFBcUIsQ0FBQztBQUV4QyxlQUFlLElBQUksT0FBTyxDQUFDO0lBQ3ZCLElBQUksRUFBRSxRQUFRO0lBQ2QsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxRQUFRLENBQUM7SUFDL0IsSUFBSSxFQUFFO1FBQ0Y7WUFDSSxRQUFRLEVBQUUsSUFBSTtZQUNkLE1BQU0sRUFBRSxzQ0FBc0M7U0FDakQ7UUFDRDtZQUNJLFFBQVEsRUFBRSxRQUFRO1lBQ2xCLE1BQU0sRUFBRSwwQkFBMEI7U0FDckM7UUFDRDtZQUNJLFFBQVEsRUFBRSxLQUFLO1lBQ2YsTUFBTSxFQUFFLHdCQUF3QjtTQUNuQztRQUNEO1lBQ0ksUUFBUSxFQUFFLEtBQUs7WUFDZixNQUFNLEVBQUUsaUJBQWlCO1NBQzVCO0tBQ0o7SUFDRCxVQUFVLEVBQUUsUUFBUTtJQUNwQixNQUFNLENBQUMsR0FBRyxFQUFFLElBQUk7UUFDWixJQUFJLEVBQUUsUUFBUSxFQUFFLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRTNDLE1BQU0sTUFBTSxHQUFHLEdBQUcsRUFBRTtZQUNoQixRQUFRLENBQUMsTUFBTSxHQUFHLFFBQVEsQ0FBQztZQUMzQixLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxvQ0FBb0MsRUFBRTtnQkFDckQsS0FBSyxFQUFFLElBQUk7YUFDZCxDQUFDLENBQUM7UUFDUCxDQUFDLENBQUM7UUFDRixNQUFNLEdBQUcsR0FBRyxHQUFHLEVBQUU7WUFDYixRQUFRLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztZQUN4QixLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxtQ0FBbUMsRUFBRTtnQkFDcEQsS0FBSyxFQUFFLElBQUk7YUFDZCxDQUFDLENBQUM7UUFDUCxDQUFDLENBQUM7UUFDRixNQUFNLEdBQUcsR0FBRyxHQUFHLEVBQUU7WUFDYixRQUFRLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztZQUN4QixLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxpQkFBaUIsRUFBRSxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQzFELENBQUMsQ0FBQztRQUVGLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDbEQsTUFBTSxFQUFFLENBQUM7U0FDWjthQUFNLElBQUksQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNoRCxHQUFHLEVBQUUsQ0FBQztTQUNUO2FBQU0sSUFBSSxDQUFDLEtBQUssRUFBRSxTQUFTLEVBQUUsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ2xELEdBQUcsRUFBRSxDQUFDO1NBQ1Q7YUFBTTtZQUNILElBQUksUUFBUSxDQUFDLE1BQU0sS0FBSyxLQUFLLEVBQUU7Z0JBQzNCLEdBQUcsRUFBRSxDQUFDO2FBQ1Q7aUJBQU07Z0JBQ0gsR0FBRyxFQUFFLENBQUM7YUFDVDtTQUNKO0lBQ0wsQ0FBQztDQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb21tYW5kIGZyb20gXCIuLi8uLi9jbGFzc2VzL0NvbW1hbmRcIjtcbmltcG9ydCBHdWlsZCBmcm9tIFwiLi4vLi4vY2xhc3Nlcy9HdWlsZFwiO1xuaW1wb3J0IFNhbHR5IGZyb20gXCIuLi8uLi9jbGFzc2VzL1NhbHR5XCI7XG5cbmV4cG9ydCBkZWZhdWx0IG5ldyBDb21tYW5kKHtcbiAgICBuYW1lOiBcInJlcGVhdFwiLFxuICAgIGtleXM6IFtcImxvb3BcIiwgXCJyZXBcIiwgXCJyZXBsYXlcIl0sXG4gICAgaGVscDogW1xuICAgICAgICB7XG4gICAgICAgICAgICBhcmd1bWVudDogbnVsbCxcbiAgICAgICAgICAgIGVmZmVjdDogXCJUb2dnbGVzIHJlcGVhdCBhbGwvb2ZmIGZvciB0aGUgcXVldWVcIixcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgYXJndW1lbnQ6IFwic2luZ2xlXCIsXG4gICAgICAgICAgICBlZmZlY3Q6IFwiUmVwZWF0cyB0aGUgY3VycmVudCBzb25nXCIsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGFyZ3VtZW50OiBcImFsbFwiLFxuICAgICAgICAgICAgZWZmZWN0OiBcIlJlcGVhdCB0aGUgd2hvbGUgcXVldWVcIixcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgYXJndW1lbnQ6IFwib2ZmXCIsXG4gICAgICAgICAgICBlZmZlY3Q6IFwiRGlzYWJsZXMgcmVwZWF0XCIsXG4gICAgICAgIH0sXG4gICAgXSxcbiAgICB2aXNpYmlsaXR5OiBcInB1YmxpY1wiLFxuICAgIGFjdGlvbihtc2csIGFyZ3MpIHtcbiAgICAgICAgbGV0IHsgcGxheWxpc3QgfSA9IEd1aWxkLmdldChtc2cuZ3VpbGQuaWQpO1xuXG4gICAgICAgIGNvbnN0IHNpbmdsZSA9ICgpID0+IHtcbiAgICAgICAgICAgIHBsYXlsaXN0LnJlcGVhdCA9IFwic2luZ2xlXCI7XG4gICAgICAgICAgICBTYWx0eS5zdWNjZXNzKG1zZywgXCJJIHdpbGwgbm93IHJlcGVhdCB0aGUgY3VycmVudCBzb25nXCIsIHtcbiAgICAgICAgICAgICAgICByZWFjdDogXCLwn5SCXCIsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgYWxsID0gKCkgPT4ge1xuICAgICAgICAgICAgcGxheWxpc3QucmVwZWF0ID0gXCJhbGxcIjtcbiAgICAgICAgICAgIFNhbHR5LnN1Y2Nlc3MobXNnLCBcIkkgd2lsbCBub3cgcmVwZWF0IHRoZSB3aG9sZSBxdWV1ZVwiLCB7XG4gICAgICAgICAgICAgICAgcmVhY3Q6IFwi8J+UgVwiLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IG9mZiA9ICgpID0+IHtcbiAgICAgICAgICAgIHBsYXlsaXN0LnJlcGVhdCA9IFwib2ZmXCI7XG4gICAgICAgICAgICBTYWx0eS5zdWNjZXNzKG1zZywgXCJyZXBlYXQgZGlzYWJsZWRcIiwgeyByZWFjdDogXCLinY5cIiB9KTtcbiAgICAgICAgfTtcblxuICAgICAgICBpZiAoW1wic2luZ2xlXCIsIFwiMVwiLCBcIm9uZVwiLCBcInRoaXNcIl0uaW5jbHVkZXMoYXJnc1swXSkpIHtcbiAgICAgICAgICAgIHNpbmdsZSgpO1xuICAgICAgICB9IGVsc2UgaWYgKFtcImFsbFwiLCBcInF1ZXVlXCIsIFwicVwiXS5pbmNsdWRlcyhhcmdzWzBdKSkge1xuICAgICAgICAgICAgYWxsKCk7XG4gICAgICAgIH0gZWxzZSBpZiAoW1wib2ZmXCIsIFwiZGlzYWJsZVwiLCBcIjBcIl0uaW5jbHVkZXMoYXJnc1swXSkpIHtcbiAgICAgICAgICAgIG9mZigpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKHBsYXlsaXN0LnJlcGVhdCA9PT0gXCJvZmZcIikge1xuICAgICAgICAgICAgICAgIGFsbCgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBvZmYoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sXG59KTtcbiJdfQ==