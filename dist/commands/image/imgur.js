import imgur from "imgur";
import Command from "../../classes/Command";
import { MissingArg, SaltyException } from "../../classes/Exception";
import Salty from "../../classes/Salty";
import { choice } from "../../utils";
imgur.setClientId();
imgur.setAPIUrl("https://api.imgur.com/3/");
export default new Command({
    name: "imgur",
    keys: ["img", "imgur"],
    help: [
        {
            argument: null,
            effect: "Work in progress",
        },
    ],
    visibility: "public",
    async action(msg, args) {
        if (!args[0]) {
            throw new MissingArg("image name");
        }
        try {
            const json = await imgur.search(args.join("AND"), {
                sort: "top",
                dateRange: "all",
                page: 1,
            });
            if (json.data.length < 1) {
                throw new SaltyException("no result");
            }
            const { title, link, images } = choice(json.data);
            const image = images ? images[0].link : link;
            Salty.embed(msg, { title, url: link, image });
        }
        catch (err) {
            Salty.error(msg, "no result");
        }
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1ndXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbWFuZHMvaW1hZ2UvaW1ndXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBQzFCLE9BQU8sT0FBTyxNQUFNLHVCQUF1QixDQUFDO0FBQzVDLE9BQU8sRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDckUsT0FBTyxLQUFLLE1BQU0scUJBQXFCLENBQUM7QUFDeEMsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUVyQyxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUM7QUFDcEIsS0FBSyxDQUFDLFNBQVMsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO0FBRTVDLGVBQWUsSUFBSSxPQUFPLENBQUM7SUFDdkIsSUFBSSxFQUFFLE9BQU87SUFDYixJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDO0lBQ3RCLElBQUksRUFBRTtRQUNGO1lBQ0ksUUFBUSxFQUFFLElBQUk7WUFDZCxNQUFNLEVBQUUsa0JBQWtCO1NBQzdCO0tBQ0o7SUFDRCxVQUFVLEVBQUUsUUFBUTtJQUNwQixLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxJQUFJO1FBQ2xCLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDVixNQUFNLElBQUksVUFBVSxDQUFDLFlBQVksQ0FBQyxDQUFDO1NBQ3RDO1FBRUQsSUFBSTtZQUNBLE1BQU0sSUFBSSxHQUFHLE1BQU0sS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFO2dCQUM5QyxJQUFJLEVBQUUsS0FBSztnQkFDWCxTQUFTLEVBQUUsS0FBSztnQkFDaEIsSUFBSSxFQUFFLENBQUM7YUFDVixDQUFDLENBQUM7WUFDSCxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtnQkFDdEIsTUFBTSxJQUFJLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQzthQUN6QztZQUNELE1BQU0sRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDbEQsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7WUFDN0MsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1NBQ2pEO1FBQUMsT0FBTyxHQUFHLEVBQUU7WUFDVixLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxXQUFXLENBQUMsQ0FBQztTQUNqQztJQUNMLENBQUM7Q0FDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaW1ndXIgZnJvbSBcImltZ3VyXCI7XG5pbXBvcnQgQ29tbWFuZCBmcm9tIFwiLi4vLi4vY2xhc3Nlcy9Db21tYW5kXCI7XG5pbXBvcnQgeyBNaXNzaW5nQXJnLCBTYWx0eUV4Y2VwdGlvbiB9IGZyb20gXCIuLi8uLi9jbGFzc2VzL0V4Y2VwdGlvblwiO1xuaW1wb3J0IFNhbHR5IGZyb20gXCIuLi8uLi9jbGFzc2VzL1NhbHR5XCI7XG5pbXBvcnQgeyBjaG9pY2UgfSBmcm9tIFwiLi4vLi4vdXRpbHNcIjtcblxuaW1ndXIuc2V0Q2xpZW50SWQoKTtcbmltZ3VyLnNldEFQSVVybChcImh0dHBzOi8vYXBpLmltZ3VyLmNvbS8zL1wiKTtcblxuZXhwb3J0IGRlZmF1bHQgbmV3IENvbW1hbmQoe1xuICAgIG5hbWU6IFwiaW1ndXJcIixcbiAgICBrZXlzOiBbXCJpbWdcIiwgXCJpbWd1clwiXSxcbiAgICBoZWxwOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGFyZ3VtZW50OiBudWxsLFxuICAgICAgICAgICAgZWZmZWN0OiBcIldvcmsgaW4gcHJvZ3Jlc3NcIixcbiAgICAgICAgfSxcbiAgICBdLFxuICAgIHZpc2liaWxpdHk6IFwicHVibGljXCIsXG4gICAgYXN5bmMgYWN0aW9uKG1zZywgYXJncykge1xuICAgICAgICBpZiAoIWFyZ3NbMF0pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBNaXNzaW5nQXJnKFwiaW1hZ2UgbmFtZVwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBqc29uID0gYXdhaXQgaW1ndXIuc2VhcmNoKGFyZ3Muam9pbihcIkFORFwiKSwge1xuICAgICAgICAgICAgICAgIHNvcnQ6IFwidG9wXCIsXG4gICAgICAgICAgICAgICAgZGF0ZVJhbmdlOiBcImFsbFwiLFxuICAgICAgICAgICAgICAgIHBhZ2U6IDEsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChqc29uLmRhdGEubGVuZ3RoIDwgMSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBTYWx0eUV4Y2VwdGlvbihcIm5vIHJlc3VsdFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHsgdGl0bGUsIGxpbmssIGltYWdlcyB9ID0gY2hvaWNlKGpzb24uZGF0YSk7XG4gICAgICAgICAgICBjb25zdCBpbWFnZSA9IGltYWdlcyA/IGltYWdlc1swXS5saW5rIDogbGluaztcbiAgICAgICAgICAgIFNhbHR5LmVtYmVkKG1zZywgeyB0aXRsZSwgdXJsOiBsaW5rLCBpbWFnZSB9KTtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBTYWx0eS5lcnJvcihtc2csIFwibm8gcmVzdWx0XCIpO1xuICAgICAgICB9XG4gICAgfSxcbn0pO1xuIl19