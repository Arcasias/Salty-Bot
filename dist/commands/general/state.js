import Command from "../../classes/Command";
import Guild from "../../classes/Guild";
import Salty from "../../classes/Salty";
import User from "../../classes/User";
export default new Command({
    name: "state",
    keys: ["git", "instance", "local", "server"],
    help: [
        {
            argument: null,
            effect: "Gets you some information about me",
        },
    ],
    visibility: "dev",
    async action(msg) {
        const options = {
            title: `Salty Bot`,
            url: Salty.config.homepage,
            description: `Last started on ${Salty.startTime.toString().split(" GMT")[0]}`,
            fields: [
                {
                    title: `Hosted on`,
                    description: process.env.MODE === "server"
                        ? "Server"
                        : "Local instance",
                },
                { title: `Owner`, description: Salty.config.owner.username },
                {
                    title: `Servers`,
                    description: `Running on ${Guild.size} servers`,
                },
                { title: `Users`, description: `Handling ${User.size} users` },
                {
                    title: `Developers`,
                    description: `${Salty.config.devs.length} contributors`,
                },
                {
                    title: `Blacklist`,
                    description: `${User.filter((u) => u.black_listed).length} troublemakers`,
                },
            ],
            inline: true,
        };
        if (process.env.DEBUG === "true") {
            options.footer = `Debug mode active`;
        }
        await Salty.embed(msg, options);
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbWFuZHMvZ2VuZXJhbC9zdGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLE9BQU8sTUFBTSx1QkFBdUIsQ0FBQztBQUM1QyxPQUFPLEtBQUssTUFBTSxxQkFBcUIsQ0FBQztBQUN4QyxPQUFPLEtBQUssTUFBTSxxQkFBcUIsQ0FBQztBQUN4QyxPQUFPLElBQUksTUFBTSxvQkFBb0IsQ0FBQztBQUV0QyxlQUFlLElBQUksT0FBTyxDQUFDO0lBQ3ZCLElBQUksRUFBRSxPQUFPO0lBQ2IsSUFBSSxFQUFFLENBQUMsS0FBSyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDO0lBQzVDLElBQUksRUFBRTtRQUNGO1lBQ0ksUUFBUSxFQUFFLElBQUk7WUFDZCxNQUFNLEVBQUUsb0NBQW9DO1NBQy9DO0tBQ0o7SUFDRCxVQUFVLEVBQUUsS0FBSztJQUNqQixLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUc7UUFDWixNQUFNLE9BQU8sR0FBRztZQUNaLEtBQUssRUFBRSxXQUFXO1lBQ2xCLEdBQUcsRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLFFBQVE7WUFDMUIsV0FBVyxFQUFFLG1CQUNULEtBQUssQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FDOUMsRUFBRTtZQUNGLE1BQU0sRUFBRTtnQkFDSjtvQkFDSSxLQUFLLEVBQUUsV0FBVztvQkFDbEIsV0FBVyxFQUNQLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxLQUFLLFFBQVE7d0JBQ3pCLENBQUMsQ0FBQyxRQUFRO3dCQUNWLENBQUMsQ0FBQyxnQkFBZ0I7aUJBQzdCO2dCQUNELEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFO2dCQUM1RDtvQkFDSSxLQUFLLEVBQUUsU0FBUztvQkFDaEIsV0FBVyxFQUFFLGNBQWMsS0FBSyxDQUFDLElBQUksVUFBVTtpQkFDbEQ7Z0JBQ0QsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxZQUFZLElBQUksQ0FBQyxJQUFJLFFBQVEsRUFBRTtnQkFDOUQ7b0JBQ0ksS0FBSyxFQUFFLFlBQVk7b0JBQ25CLFdBQVcsRUFBRSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sZUFBZTtpQkFDMUQ7Z0JBQ0Q7b0JBQ0ksS0FBSyxFQUFFLFdBQVc7b0JBQ2xCLFdBQVcsRUFBRSxHQUNULElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxNQUN2QyxnQkFBZ0I7aUJBQ25CO2FBQ0o7WUFDRCxNQUFNLEVBQUUsSUFBSTtTQUNmLENBQUM7UUFDRixJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxLQUFLLE1BQU0sRUFBRTtZQUM5QixPQUFPLENBQUMsTUFBTSxHQUFHLG1CQUFtQixDQUFDO1NBQ3hDO1FBQ0QsTUFBTSxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUNwQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbW1hbmQgZnJvbSBcIi4uLy4uL2NsYXNzZXMvQ29tbWFuZFwiO1xuaW1wb3J0IEd1aWxkIGZyb20gXCIuLi8uLi9jbGFzc2VzL0d1aWxkXCI7XG5pbXBvcnQgU2FsdHkgZnJvbSBcIi4uLy4uL2NsYXNzZXMvU2FsdHlcIjtcbmltcG9ydCBVc2VyIGZyb20gXCIuLi8uLi9jbGFzc2VzL1VzZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgbmV3IENvbW1hbmQoe1xuICAgIG5hbWU6IFwic3RhdGVcIixcbiAgICBrZXlzOiBbXCJnaXRcIiwgXCJpbnN0YW5jZVwiLCBcImxvY2FsXCIsIFwic2VydmVyXCJdLFxuICAgIGhlbHA6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgYXJndW1lbnQ6IG51bGwsXG4gICAgICAgICAgICBlZmZlY3Q6IFwiR2V0cyB5b3Ugc29tZSBpbmZvcm1hdGlvbiBhYm91dCBtZVwiLFxuICAgICAgICB9LFxuICAgIF0sXG4gICAgdmlzaWJpbGl0eTogXCJkZXZcIixcbiAgICBhc3luYyBhY3Rpb24obXNnKSB7XG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgICAgICB0aXRsZTogYFNhbHR5IEJvdGAsXG4gICAgICAgICAgICB1cmw6IFNhbHR5LmNvbmZpZy5ob21lcGFnZSxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBgTGFzdCBzdGFydGVkIG9uICR7XG4gICAgICAgICAgICAgICAgU2FsdHkuc3RhcnRUaW1lLnRvU3RyaW5nKCkuc3BsaXQoXCIgR01UXCIpWzBdXG4gICAgICAgICAgICB9YCxcbiAgICAgICAgICAgIGZpZWxkczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IGBIb3N0ZWQgb25gLFxuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2Nlc3MuZW52Lk1PREUgPT09IFwic2VydmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFwiU2VydmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwiTG9jYWwgaW5zdGFuY2VcIixcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgdGl0bGU6IGBPd25lcmAsIGRlc2NyaXB0aW9uOiBTYWx0eS5jb25maWcub3duZXIudXNlcm5hbWUgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBgU2VydmVyc2AsXG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBgUnVubmluZyBvbiAke0d1aWxkLnNpemV9IHNlcnZlcnNgLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyB0aXRsZTogYFVzZXJzYCwgZGVzY3JpcHRpb246IGBIYW5kbGluZyAke1VzZXIuc2l6ZX0gdXNlcnNgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogYERldmVsb3BlcnNgLFxuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogYCR7U2FsdHkuY29uZmlnLmRldnMubGVuZ3RofSBjb250cmlidXRvcnNgLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogYEJsYWNrbGlzdGAsXG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBgJHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFVzZXIuZmlsdGVyKCh1KSA9PiB1LmJsYWNrX2xpc3RlZCkubGVuZ3RoXG4gICAgICAgICAgICAgICAgICAgIH0gdHJvdWJsZW1ha2Vyc2AsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBpbmxpbmU6IHRydWUsXG4gICAgICAgIH07XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5ERUJVRyA9PT0gXCJ0cnVlXCIpIHtcbiAgICAgICAgICAgIG9wdGlvbnMuZm9vdGVyID0gYERlYnVnIG1vZGUgYWN0aXZlYDtcbiAgICAgICAgfVxuICAgICAgICBhd2FpdCBTYWx0eS5lbWJlZChtc2csIG9wdGlvbnMpO1xuICAgIH0sXG59KTtcbiJdfQ==