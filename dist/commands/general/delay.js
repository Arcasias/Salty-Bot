import Command from "../../classes/Command";
import { MissingArg } from "../../classes/Exception";
import Salty from "../../classes/Salty";
export default new Command({
    name: "delay",
    keys: ["later", "sleep"],
    help: [
        {
            argument: null,
            effect: null,
        },
        {
            argument: "*delay* ***anything***",
            effect: "I'll tell what you want after a provided delay",
        },
    ],
    visibility: "public",
    async action(msg, args) {
        if (!args[0]) {
            throw new MissingArg("anything");
        }
        const delay = args[1] && !isNaN(args[0]) ? parseInt(args.shift()) * 1000 : 5000;
        msg.delete().catch();
        setTimeout(() => {
            Salty.message(msg, args.join(" "));
        }, delay);
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVsYXkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbWFuZHMvZ2VuZXJhbC9kZWxheS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLE9BQU8sTUFBTSx1QkFBdUIsQ0FBQztBQUM1QyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDckQsT0FBTyxLQUFLLE1BQU0scUJBQXFCLENBQUM7QUFFeEMsZUFBZSxJQUFJLE9BQU8sQ0FBQztJQUN2QixJQUFJLEVBQUUsT0FBTztJQUNiLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUM7SUFDeEIsSUFBSSxFQUFFO1FBQ0Y7WUFDSSxRQUFRLEVBQUUsSUFBSTtZQUNkLE1BQU0sRUFBRSxJQUFJO1NBQ2Y7UUFDRDtZQUNJLFFBQVEsRUFBRSx3QkFBd0I7WUFDbEMsTUFBTSxFQUFFLGdEQUFnRDtTQUMzRDtLQUNKO0lBQ0QsVUFBVSxFQUFFLFFBQVE7SUFDcEIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsSUFBSTtRQUNsQixJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ1YsTUFBTSxJQUFJLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQztTQUNwQztRQUVELE1BQU0sS0FBSyxHQUNQLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBRXRFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUVyQixVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ1osS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3ZDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNkLENBQUM7Q0FDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29tbWFuZCBmcm9tIFwiLi4vLi4vY2xhc3Nlcy9Db21tYW5kXCI7XG5pbXBvcnQgeyBNaXNzaW5nQXJnIH0gZnJvbSBcIi4uLy4uL2NsYXNzZXMvRXhjZXB0aW9uXCI7XG5pbXBvcnQgU2FsdHkgZnJvbSBcIi4uLy4uL2NsYXNzZXMvU2FsdHlcIjtcblxuZXhwb3J0IGRlZmF1bHQgbmV3IENvbW1hbmQoe1xuICAgIG5hbWU6IFwiZGVsYXlcIixcbiAgICBrZXlzOiBbXCJsYXRlclwiLCBcInNsZWVwXCJdLFxuICAgIGhlbHA6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgYXJndW1lbnQ6IG51bGwsXG4gICAgICAgICAgICBlZmZlY3Q6IG51bGwsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGFyZ3VtZW50OiBcIipkZWxheSogKioqYW55dGhpbmcqKipcIixcbiAgICAgICAgICAgIGVmZmVjdDogXCJJJ2xsIHRlbGwgd2hhdCB5b3Ugd2FudCBhZnRlciBhIHByb3ZpZGVkIGRlbGF5XCIsXG4gICAgICAgIH0sXG4gICAgXSxcbiAgICB2aXNpYmlsaXR5OiBcInB1YmxpY1wiLFxuICAgIGFzeW5jIGFjdGlvbihtc2csIGFyZ3MpIHtcbiAgICAgICAgaWYgKCFhcmdzWzBdKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgTWlzc2luZ0FyZyhcImFueXRoaW5nXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZGVsYXkgPVxuICAgICAgICAgICAgYXJnc1sxXSAmJiAhaXNOYU4oYXJnc1swXSkgPyBwYXJzZUludChhcmdzLnNoaWZ0KCkpICogMTAwMCA6IDUwMDA7XG5cbiAgICAgICAgbXNnLmRlbGV0ZSgpLmNhdGNoKCk7XG5cbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICBTYWx0eS5tZXNzYWdlKG1zZywgYXJncy5qb2luKFwiIFwiKSk7XG4gICAgICAgIH0sIGRlbGF5KTtcbiAgICB9LFxufSk7XG4iXX0=