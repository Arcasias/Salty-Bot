import Command from "../../classes/Command";
import Salty from "../../classes/Salty";
const STATUSINFO = {
    dnd: { title: "do not disturb", color: 15746887 },
    idle: { title: "idle", color: 16426522 },
    online: { title: "online", color: 4437378 },
};
export default new Command({
    name: "presence",
    keys: ["game", "status"],
    visibility: "dev",
    async action(msg, args) {
        if (args[0] && Salty.getList("delete").includes(args[0])) {
            await Salty.bot.user.setPresence({
                game: null,
                status: Salty.bot.user.presence.status,
            });
            Salty.success(msg, "current presence removed");
        }
        else if (args[0]) {
            const status = args[0];
            if (status in STATUSINFO) {
                // status
                await Salty.bot.user.setStatus(status);
                Salty.success(msg, `changed my status to **${STATUSINFO[status].title}**`, { color: STATUSINFO[status].color });
            }
            else {
                // game
                await Salty.bot.user.setPresence({
                    game: { name: status },
                    status: Salty.bot.user.presence.status,
                });
                Salty.success(msg, `changed my presence to **${status}**`);
            }
        }
        else {
            const { color, title } = STATUSINFO[Salty.bot.user.presence.status];
            const description = Salty.bot.user.presence.game &&
                Salty.bot.user.presence.game.name;
            Salty.embed(msg, { color, title, description });
        }
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VuY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbWFuZHMvY29uZmlnL3ByZXNlbmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sT0FBTyxNQUFNLHVCQUF1QixDQUFDO0FBQzVDLE9BQU8sS0FBSyxNQUFNLHFCQUFxQixDQUFDO0FBU3hDLE1BQU0sVUFBVSxHQUFnQjtJQUM1QixHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtJQUNqRCxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUU7SUFDeEMsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFO0NBQzlDLENBQUM7QUFFRixlQUFlLElBQUksT0FBTyxDQUFDO0lBQ3ZCLElBQUksRUFBRSxVQUFVO0lBQ2hCLElBQUksRUFBRSxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUM7SUFDeEIsVUFBVSxFQUFFLEtBQUs7SUFDakIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsSUFBSTtRQUNsQixJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUN0RCxNQUFNLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQztnQkFDN0IsSUFBSSxFQUFFLElBQUk7Z0JBQ1YsTUFBTSxFQUFFLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNO2FBQ3pDLENBQUMsQ0FBQztZQUNILEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLDBCQUEwQixDQUFDLENBQUM7U0FDbEQ7YUFBTSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNoQixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkIsSUFBSSxNQUFNLElBQUksVUFBVSxFQUFFO2dCQUN0QixTQUFTO2dCQUNULE1BQU0sS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUN2QyxLQUFLLENBQUMsT0FBTyxDQUNULEdBQUcsRUFDSCwwQkFBMEIsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssSUFBSSxFQUN0RCxFQUFFLEtBQUssRUFBRSxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQ3RDLENBQUM7YUFDTDtpQkFBTTtnQkFDSCxPQUFPO2dCQUNQLE1BQU0sS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO29CQUM3QixJQUFJLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFO29CQUN0QixNQUFNLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU07aUJBQ3pDLENBQUMsQ0FBQztnQkFDSCxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSw0QkFBNEIsTUFBTSxJQUFJLENBQUMsQ0FBQzthQUM5RDtTQUNKO2FBQU07WUFDSCxNQUFNLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxHQUFHLFVBQVUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDcEUsTUFBTSxXQUFXLEdBQ2IsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUk7Z0JBQzVCLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1lBQ3RDLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsQ0FBQyxDQUFDO1NBQ25EO0lBQ0wsQ0FBQztDQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb21tYW5kIGZyb20gXCIuLi8uLi9jbGFzc2VzL0NvbW1hbmRcIjtcbmltcG9ydCBTYWx0eSBmcm9tIFwiLi4vLi4vY2xhc3Nlcy9TYWx0eVwiO1xuXG5pbnRlcmZhY2UgU3RhdHVzSW5mbyB7XG4gICAgdGl0bGU6IHN0cmluZztcbiAgICBjb2xvcjogbnVtYmVyO1xufVxuXG50eXBlIFN0YXR1c0luZm9zID0geyBbc3RhdHVzOiBzdHJpbmddOiBTdGF0dXNJbmZvIH07XG5cbmNvbnN0IFNUQVRVU0lORk86IFN0YXR1c0luZm9zID0ge1xuICAgIGRuZDogeyB0aXRsZTogXCJkbyBub3QgZGlzdHVyYlwiLCBjb2xvcjogMTU3NDY4ODcgfSxcbiAgICBpZGxlOiB7IHRpdGxlOiBcImlkbGVcIiwgY29sb3I6IDE2NDI2NTIyIH0sXG4gICAgb25saW5lOiB7IHRpdGxlOiBcIm9ubGluZVwiLCBjb2xvcjogNDQzNzM3OCB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgbmV3IENvbW1hbmQoe1xuICAgIG5hbWU6IFwicHJlc2VuY2VcIixcbiAgICBrZXlzOiBbXCJnYW1lXCIsIFwic3RhdHVzXCJdLFxuICAgIHZpc2liaWxpdHk6IFwiZGV2XCIsXG4gICAgYXN5bmMgYWN0aW9uKG1zZywgYXJncykge1xuICAgICAgICBpZiAoYXJnc1swXSAmJiBTYWx0eS5nZXRMaXN0KFwiZGVsZXRlXCIpLmluY2x1ZGVzKGFyZ3NbMF0pKSB7XG4gICAgICAgICAgICBhd2FpdCBTYWx0eS5ib3QudXNlci5zZXRQcmVzZW5jZSh7XG4gICAgICAgICAgICAgICAgZ2FtZTogbnVsbCxcbiAgICAgICAgICAgICAgICBzdGF0dXM6IFNhbHR5LmJvdC51c2VyLnByZXNlbmNlLnN0YXR1cyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgU2FsdHkuc3VjY2Vzcyhtc2csIFwiY3VycmVudCBwcmVzZW5jZSByZW1vdmVkXCIpO1xuICAgICAgICB9IGVsc2UgaWYgKGFyZ3NbMF0pIHtcbiAgICAgICAgICAgIGNvbnN0IHN0YXR1cyA9IGFyZ3NbMF07XG4gICAgICAgICAgICBpZiAoc3RhdHVzIGluIFNUQVRVU0lORk8pIHtcbiAgICAgICAgICAgICAgICAvLyBzdGF0dXNcbiAgICAgICAgICAgICAgICBhd2FpdCBTYWx0eS5ib3QudXNlci5zZXRTdGF0dXMoc3RhdHVzKTtcbiAgICAgICAgICAgICAgICBTYWx0eS5zdWNjZXNzKFxuICAgICAgICAgICAgICAgICAgICBtc2csXG4gICAgICAgICAgICAgICAgICAgIGBjaGFuZ2VkIG15IHN0YXR1cyB0byAqKiR7U1RBVFVTSU5GT1tzdGF0dXNdLnRpdGxlfSoqYCxcbiAgICAgICAgICAgICAgICAgICAgeyBjb2xvcjogU1RBVFVTSU5GT1tzdGF0dXNdLmNvbG9yIH1cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBnYW1lXG4gICAgICAgICAgICAgICAgYXdhaXQgU2FsdHkuYm90LnVzZXIuc2V0UHJlc2VuY2Uoe1xuICAgICAgICAgICAgICAgICAgICBnYW1lOiB7IG5hbWU6IHN0YXR1cyB9LFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IFNhbHR5LmJvdC51c2VyLnByZXNlbmNlLnN0YXR1cyxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBTYWx0eS5zdWNjZXNzKG1zZywgYGNoYW5nZWQgbXkgcHJlc2VuY2UgdG8gKioke3N0YXR1c30qKmApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgeyBjb2xvciwgdGl0bGUgfSA9IFNUQVRVU0lORk9bU2FsdHkuYm90LnVzZXIucHJlc2VuY2Uuc3RhdHVzXTtcbiAgICAgICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uID1cbiAgICAgICAgICAgICAgICBTYWx0eS5ib3QudXNlci5wcmVzZW5jZS5nYW1lICYmXG4gICAgICAgICAgICAgICAgU2FsdHkuYm90LnVzZXIucHJlc2VuY2UuZ2FtZS5uYW1lO1xuICAgICAgICAgICAgU2FsdHkuZW1iZWQobXNnLCB7IGNvbG9yLCB0aXRsZSwgZGVzY3JpcHRpb24gfSk7XG4gICAgICAgIH1cbiAgICB9LFxufSk7XG4iXX0=