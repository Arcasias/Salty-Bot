"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function choice(array) {
    return array[Math.floor(Math.random() * array.length)];
}
exports.choice = choice;
function clean(string) {
    return string
        .replace(/[,."'`\-_]/g, "")
        .trim()
        .toLowerCase();
}
exports.clean = clean;
function formatDuration(time = null) {
    const d = time ? new Date(time) : new Date();
    const formatted = [
        Math.max(d.getHours() - 1, 0),
        d.getMinutes(),
        d.getSeconds(),
    ];
    return formatted.map((x) => x.toString().padStart(2, "0")).join(":");
}
exports.formatDuration = formatDuration;
function generate(percentage) {
    return Math.random() * 100 <= percentage;
}
exports.generate = generate;
function isSorted(array) {
    for (let i = 0; i < array.length; i++) {
        if (i < array.length && array[i + 1] < array[i]) {
            return false;
        }
    }
    return true;
}
exports.isSorted = isSorted;
const LVD_REPLACE = 1.5;
const LVD_INSERT = 1;
const LVD_DELETE = 1;
function levenshtein(a, b) {
    if (!a.length || !b.length) {
        return (b || a).length;
    }
    const matrix = [];
    for (let row = 0; row <= a.length; matrix[row] = [row++])
        ;
    for (let col = 0; col <= b.length; matrix[0][col] = col++)
        ;
    for (let row = 1; row <= a.length; row++) {
        for (let col = 1; col <= b.length; col++) {
            matrix[row][col] =
                a[row - 1] === b[col - 1]
                    ? matrix[row - 1][col - 1]
                    : Math.min(matrix[row - 1][col - 1] + LVD_REPLACE, matrix[row][col - 1] + LVD_INSERT, matrix[row - 1][col] + LVD_DELETE);
        }
    }
    return matrix[a.length][b.length];
}
exports.levenshtein = levenshtein;
function possessive(text) {
    return "s" === text[text.length - 1] ? `${text}'` : `${text}'s`;
}
exports.possessive = possessive;
function promisify(fn) {
    return new Promise((resolve, reject) => {
        fn((error, result) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(result);
            }
        });
    });
}
exports.promisify = promisify;
function search(array, target, threshold) {
    const closests = [];
    for (const str of array) {
        const lvd = levenshtein(target, str);
        if (lvd <= threshold) {
            closests.push([str, lvd]);
        }
    }
    return closests.sort((a, b) => a[1] - b[1]).map((c) => c[0]);
}
exports.search = search;
function shuffle(array) {
    const copy = array.slice();
    for (let i = copy.length - 1; i > 0; i--) {
        const randId = Math.floor(Math.random() * (i + 1));
        const temp = copy[i];
        copy[i] = copy[randId];
        copy[randId] = temp;
    }
    return copy;
}
exports.shuffle = shuffle;
function title(string) {
    return string[0].toUpperCase() + string.slice(1);
}
exports.title = title;
const colors = {
    RED: "\x1b[31m",
    GREEN: "\x1b[32m",
    YELLOW: "\x1b[33m",
    BLUE: "\x1b[34m",
    MAGENTA: "\x1b[35m",
    CYAN: "\x1b[36m",
    RESET: "\x1b[0m",
};
function debug(...message) {
    if (process.env.DEBUG !== "true") {
        return;
    }
    if (process.env.MODE === "local") {
        message.unshift(`${colors.RESET + formatDuration()} ${colors.MAGENTA}DEBUG${colors.RESET} :`);
    }
    console.log(...message);
}
exports.debug = debug;
function error(...message) {
    if (process.env.MODE === "local") {
        message.unshift(`${colors.RESET + formatDuration()} ${colors.RED}ERROR${colors.RESET} :`);
    }
    console.error(...message);
}
exports.error = error;
function log(...message) {
    if (process.env.MODE === "local") {
        message.unshift(`${colors.RESET + formatDuration()} ${colors.CYAN}INFO${colors.RESET} :`);
    }
    console.log(...message);
}
exports.log = log;
function request(guild, user, msg) {
    const content = msg
        ? `${colors.GREEN}"${msg}"${colors.RESET}`
        : `${colors.RED}[EMPTY MESSAGE]${colors.RESET}`;
    const message = [
        `${colors.YELLOW + guild + colors.RESET} > ${colors.YELLOW + user + colors.RESET} : ${content}`,
    ];
    if (process.env.MODE === "local") {
        message.unshift(`${colors.RESET + formatDuration()}`);
    }
    console.log(...message);
}
exports.request = request;
function warn(...message) {
    if (process.env.MODE === "local") {
        message.unshift(`${colors.RESET + formatDuration()} ${colors.YELLOW}WARNING${colors.RESET} :`);
    }
    console.warn(...message);
}
exports.warn = warn;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFRQSxTQUFnQixNQUFNLENBQUksS0FBVTtJQUNoQyxPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUMzRCxDQUFDO0FBRkQsd0JBRUM7QUFTRCxTQUFnQixLQUFLLENBQUMsTUFBYztJQUNoQyxPQUFPLE1BQU07U0FDUixPQUFPLENBQUMsYUFBYSxFQUFFLEVBQUUsQ0FBQztTQUMxQixJQUFJLEVBQUU7U0FDTixXQUFXLEVBQUUsQ0FBQztBQUN2QixDQUFDO0FBTEQsc0JBS0M7QUFPRCxTQUFnQixjQUFjLENBQUMsT0FBZSxJQUFJO0lBQzlDLE1BQU0sQ0FBQyxHQUFTLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxFQUFFLENBQUM7SUFDbkQsTUFBTSxTQUFTLEdBQWE7UUFDeEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUM3QixDQUFDLENBQUMsVUFBVSxFQUFFO1FBQ2QsQ0FBQyxDQUFDLFVBQVUsRUFBRTtLQUNqQixDQUFDO0lBQ0YsT0FBTyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUN6RSxDQUFDO0FBUkQsd0NBUUM7QUFNRCxTQUFnQixRQUFRLENBQUMsVUFBa0I7SUFDdkMsT0FBTyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsR0FBRyxJQUFJLFVBQVUsQ0FBQztBQUM3QyxDQUFDO0FBRkQsNEJBRUM7QUFRRCxTQUFnQixRQUFRLENBQUMsS0FBMEI7SUFDL0MsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDbkMsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sSUFBSSxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUM3QyxPQUFPLEtBQUssQ0FBQztTQUNoQjtLQUNKO0lBQ0QsT0FBTyxJQUFJLENBQUM7QUFDaEIsQ0FBQztBQVBELDRCQU9DO0FBR0QsTUFBTSxXQUFXLEdBQUcsR0FBRyxDQUFDO0FBQ3hCLE1BQU0sVUFBVSxHQUFHLENBQUMsQ0FBQztBQUNyQixNQUFNLFVBQVUsR0FBRyxDQUFDLENBQUM7QUFPckIsU0FBZ0IsV0FBVyxDQUFDLENBQVMsRUFBRSxDQUFTO0lBRTVDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRTtRQUN4QixPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztLQUMxQjtJQUNELE1BQU0sTUFBTSxHQUFlLEVBQUUsQ0FBQztJQUU5QixLQUFLLElBQUksR0FBRyxHQUFHLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUFDLENBQUM7SUFDMUQsS0FBSyxJQUFJLEdBQUcsR0FBRyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsRUFBRTtRQUFDLENBQUM7SUFFM0QsS0FBSyxJQUFJLEdBQUcsR0FBRyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDdEMsS0FBSyxJQUFJLEdBQUcsR0FBRyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLEVBQUU7WUFDdEMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQztnQkFDWixDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO29CQUNyQixDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO29CQUMxQixDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FDSixNQUFNLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsR0FBRyxXQUFXLEVBQ3RDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLEdBQUcsVUFBVSxFQUNqQyxNQUFNLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLFVBQVUsQ0FDcEMsQ0FBQztTQUNmO0tBQ0o7SUFFRCxPQUFPLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3RDLENBQUM7QUF4QkQsa0NBd0JDO0FBTUQsU0FBZ0IsVUFBVSxDQUFDLElBQVk7SUFDbkMsT0FBTyxHQUFHLEtBQUssSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUM7QUFDcEUsQ0FBQztBQUZELGdDQUVDO0FBUUQsU0FBZ0IsU0FBUyxDQUNyQixFQUF5RDtJQUV6RCxPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1FBQ25DLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsRUFBRTtZQUNqQixJQUFJLEtBQUssRUFBRTtnQkFDUCxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDakI7aUJBQU07Z0JBQ0gsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ25CO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDLENBQUMsQ0FBQztBQUNQLENBQUM7QUFaRCw4QkFZQztBQVNELFNBQWdCLE1BQU0sQ0FBQyxLQUFlLEVBQUUsTUFBYyxFQUFFLFNBQWlCO0lBQ3JFLE1BQU0sUUFBUSxHQUE0QixFQUFFLENBQUM7SUFDN0MsS0FBSyxNQUFNLEdBQUcsSUFBSSxLQUFLLEVBQUU7UUFDckIsTUFBTSxHQUFHLEdBQUcsV0FBVyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNyQyxJQUFJLEdBQUcsSUFBSSxTQUFTLEVBQUU7WUFDbEIsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQzdCO0tBQ0o7SUFDRCxPQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNqRSxDQUFDO0FBVEQsd0JBU0M7QUFNRCxTQUFnQixPQUFPLENBQUksS0FBVTtJQUNqQyxNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDM0IsS0FBSyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ3RDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbkQsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQztLQUN2QjtJQUNELE9BQU8sSUFBSSxDQUFDO0FBQ2hCLENBQUM7QUFURCwwQkFTQztBQU1ELFNBQWdCLEtBQUssQ0FBQyxNQUFjO0lBQ2hDLE9BQU8sTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDckQsQ0FBQztBQUZELHNCQUVDO0FBTUQsTUFBTSxNQUFNLEdBQUc7SUFDWCxHQUFHLEVBQUUsVUFBVTtJQUNmLEtBQUssRUFBRSxVQUFVO0lBQ2pCLE1BQU0sRUFBRSxVQUFVO0lBQ2xCLElBQUksRUFBRSxVQUFVO0lBQ2hCLE9BQU8sRUFBRSxVQUFVO0lBQ25CLElBQUksRUFBRSxVQUFVO0lBR2hCLEtBQUssRUFBRSxTQUFTO0NBQ25CLENBQUM7QUFLRixTQUFnQixLQUFLLENBQUMsR0FBRyxPQUFjO0lBQ25DLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEtBQUssTUFBTSxFQUFFO1FBQzlCLE9BQU87S0FDVjtJQUNELElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssT0FBTyxFQUFFO1FBQzlCLE9BQU8sQ0FBQyxPQUFPLENBQ1gsR0FBRyxNQUFNLENBQUMsS0FBSyxHQUFHLGNBQWMsRUFBRSxJQUFJLE1BQU0sQ0FBQyxPQUFPLFFBQ2hELE1BQU0sQ0FBQyxLQUNYLElBQUksQ0FDUCxDQUFDO0tBQ0w7SUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDLENBQUM7QUFDNUIsQ0FBQztBQVpELHNCQVlDO0FBS0QsU0FBZ0IsS0FBSyxDQUFDLEdBQUcsT0FBYztJQUNuQyxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxLQUFLLE9BQU8sRUFBRTtRQUM5QixPQUFPLENBQUMsT0FBTyxDQUNYLEdBQUcsTUFBTSxDQUFDLEtBQUssR0FBRyxjQUFjLEVBQUUsSUFBSSxNQUFNLENBQUMsR0FBRyxRQUM1QyxNQUFNLENBQUMsS0FDWCxJQUFJLENBQ1AsQ0FBQztLQUNMO0lBQ0QsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDO0FBQzlCLENBQUM7QUFURCxzQkFTQztBQUtELFNBQWdCLEdBQUcsQ0FBQyxHQUFHLE9BQWM7SUFDakMsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksS0FBSyxPQUFPLEVBQUU7UUFDOUIsT0FBTyxDQUFDLE9BQU8sQ0FDWCxHQUFHLE1BQU0sQ0FBQyxLQUFLLEdBQUcsY0FBYyxFQUFFLElBQUksTUFBTSxDQUFDLElBQUksT0FDN0MsTUFBTSxDQUFDLEtBQ1gsSUFBSSxDQUNQLENBQUM7S0FDTDtJQUNELE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxPQUFPLENBQUMsQ0FBQztBQUM1QixDQUFDO0FBVEQsa0JBU0M7QUFPRCxTQUFnQixPQUFPLENBQUMsS0FBYSxFQUFFLElBQVksRUFBRSxHQUFXO0lBQzVELE1BQU0sT0FBTyxHQUFHLEdBQUc7UUFDZixDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsS0FBSyxJQUFJLEdBQUcsSUFBSSxNQUFNLENBQUMsS0FBSyxFQUFFO1FBQzFDLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxHQUFHLGtCQUFrQixNQUFNLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDcEQsTUFBTSxPQUFPLEdBQUc7UUFDWixHQUFHLE1BQU0sQ0FBQyxNQUFNLEdBQUcsS0FBSyxHQUFHLE1BQU0sQ0FBQyxLQUFLLE1BQ25DLE1BQU0sQ0FBQyxNQUFNLEdBQUcsSUFBSSxHQUFHLE1BQU0sQ0FBQyxLQUNsQyxNQUFNLE9BQU8sRUFBRTtLQUNsQixDQUFDO0lBQ0YsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksS0FBSyxPQUFPLEVBQUU7UUFDOUIsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLE1BQU0sQ0FBQyxLQUFLLEdBQUcsY0FBYyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0tBQ3pEO0lBQ0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDO0FBQzVCLENBQUM7QUFiRCwwQkFhQztBQUtELFNBQWdCLElBQUksQ0FBQyxHQUFHLE9BQWM7SUFDbEMsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksS0FBSyxPQUFPLEVBQUU7UUFDOUIsT0FBTyxDQUFDLE9BQU8sQ0FDWCxHQUFHLE1BQU0sQ0FBQyxLQUFLLEdBQUcsY0FBYyxFQUFFLElBQUksTUFBTSxDQUFDLE1BQU0sVUFDL0MsTUFBTSxDQUFDLEtBQ1gsSUFBSSxDQUNQLENBQUM7S0FDTDtJQUNELE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxPQUFPLENBQUMsQ0FBQztBQUM3QixDQUFDO0FBVEQsb0JBU0MifQ==